import dayjs, { ConfigType, OpUnitType, QUnitType } from "dayjs";
declare const djsParseUTC: (aTime?: ConfigType) => dayjs.Dayjs;
declare const djsFormat: (aTime?: ConfigType, format?: string) => string;
declare const djsFromNow: (aTime?: ConfigType, withoutSuffix?: boolean) => string;
declare const djsToNow: (aTime?: ConfigType, withoutSuffix?: boolean) => string;
declare const djsFromAtTime: (aTime?: ConfigType, compared?: ConfigType, withoutSuffix?: boolean) => string;
declare const djsToAtTime: (aTime?: ConfigType, compared?: ConfigType, withoutSuffix?: boolean) => string;
declare const djsCalendar: (referenceTime?: ConfigType, formats?: object) => string;
declare const djsDiff: (aTime?: ConfigType, bTime?: ConfigType, unit?: QUnitType | OpUnitType, float?: boolean) => number;
declare const djsToDateJs: (aTime?: ConfigType) => Date;
declare const djsToArray: (aTime?: ConfigType) => number[];
declare const djsToJson: (aTime?: ConfigType) => string;
declare const djsToISOString: (aTime?: ConfigType) => string;
declare const djsToObject: any;
declare const djsToString: (aTime?: ConfigType) => string;
declare const djsUnixTimestamp: (aTime?: ConfigType) => number;
declare const djsUnix: (aTime?: ConfigType) => number;
declare const djsDayInMonth: (aTime?: ConfigType) => number;
declare const djsFormatUTC: (aTime?: ConfigType, format?: string) => string;
declare const djsFormatDDD: (aTime?: ConfigType) => string;
declare const djsFormatDDDD: (aTime?: ConfigType) => string;
declare const djsFormatMMDD: (aTime?: ConfigType) => string;
declare const djsFormatDDMM: (aTime?: ConfigType) => string;
declare const djsFormatYYYYMMDD: (aTime?: ConfigType) => string;
declare const djsFormatYYYY: (aTime?: ConfigType) => string;
declare const djsFormatYYYYMMDDHHMMSSZ: (aTime?: ConfigType) => string;
export { djsFormat, djsFromNow, djsFromAtTime, djsToAtTime, djsCalendar, djsToNow, djsDiff, djsToDateJs, djsToArray, djsUnix, djsDayInMonth, djsToISOString, djsToJson, djsToObject, djsToString, djsUnixTimestamp, djsParseUTC, djsFormatDDD, djsFormatDDDD, djsFormatDDMM, djsFormatMMDD, djsFormatUTC, djsFormatYYYY, djsFormatYYYYMMDD, djsFormatYYYYMMDDHHMMSSZ, };
